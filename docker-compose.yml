version: "3.18"

services:
  gradle:
    build:
      dockerfile: docker/gradle.Dockerfile
      context: .
    image: koh/gradle-base

  mail:
    env_file: develop.env
    build:
      dockerfile: docker/mail.Dockerfile
      context: .
    image: koh/mail-hub
    hostname: mail
    domainname: example.com
    ports:
      - "25:25"      # SMTP
      - "143:143"  # IMAP
      - "587:587"  # Submission
      - "993:993"  # IMAPS
    volumes:
      - .docker_cache/dms/maildata:/var/mail
      - .docker_cache/dms/mailstate:/var/mail-state
      - .docker_cache/dms/maillogs:/var/log/mail
      - .docker_cache/config/:/tmp/docker-mailserver/
    cap_add:
      - NET_ADMIN
      - SYS_PTRACE
    restart: always
    networks:
      - default

  db:
    env_file: develop.env
    build:
      dockerfile: docker/db/db.Dockerfile
      context: .
    image: koh/db-hub
#    environment:
#      MYSQL_ROOT_PASSWORD: dev@123
#      MYSQL_DATABASE: vps_management
#      MYSQL_USER: duync
#      MYSQL_PASSWORD: dev@123
    ports:
      - "3306:3306"
    volumes:
      - .docker_cache/db_data:/var/lib/mysql
    networks:
      - default

  auth:
    env_file: develop.env
    build:
      dockerfile: docker/auth/auth.Dockerfile
      context: .
    image: koh/auth-app
    ports:
      - 8080:8080
      - 8081:8081
    expose:
      - 8080
    networks:
      - default

  vps:
    env_file: develop.env
    build:
      dockerfile: docker/vps/vps.Dockerfile
      context: .
    image: koh/vps-app
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker:/var/lib/docker
    networks:
      - default

networks:
  vps-network:
    external: true
  default:
    name: vps-network
    external: true
